// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// SessionType is an enumeration to indicate the type of the session
// between 2 Node s.
type SessionType int32

const (
	SessionType_SINGLE_CALL SessionType = 0
	SessionType_MULTI_CALL  SessionType = 1
)

var SessionType_name = map[int32]string{
	0: "SINGLE_CALL",
	1: "MULTI_CALL",
}

var SessionType_value = map[string]int32{
	"SINGLE_CALL": 0,
	"MULTI_CALL":  1,
}

func (x SessionType) String() string {
	return proto.EnumName(SessionType_name, int32(x))
}

func (SessionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{0}
}

type Status_Type int32

const (
	Status_NO_ERROR          Status_Type = 0
	Status_NO_DATA_FOUND     Status_Type = 1
	Status_PERMISSION_DENIED Status_Type = 2
	Status_NO_SUCH_DATA      Status_Type = 3
	Status_ERROR             Status_Type = 4
)

var Status_Type_name = map[int32]string{
	0: "NO_ERROR",
	1: "NO_DATA_FOUND",
	2: "PERMISSION_DENIED",
	3: "NO_SUCH_DATA",
	4: "ERROR",
}

var Status_Type_value = map[string]int32{
	"NO_ERROR":          0,
	"NO_DATA_FOUND":     1,
	"PERMISSION_DENIED": 2,
	"NO_SUCH_DATA":      3,
	"ERROR":             4,
}

func (x Status_Type) String() string {
	return proto.EnumName(Status_Type_name, int32(x))
}

func (Status_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{5, 0}
}

type Request_Type int32

const (
	Request_SYNC      Request_Type = 0
	Request_ASYNC     Request_Type = 1
	Request_PUBLISH   Request_Type = 2
	Request_SUBSCRIBE Request_Type = 3
)

var Request_Type_name = map[int32]string{
	0: "SYNC",
	1: "ASYNC",
	2: "PUBLISH",
	3: "SUBSCRIBE",
}

var Request_Type_value = map[string]int32{
	"SYNC":      0,
	"ASYNC":     1,
	"PUBLISH":   2,
	"SUBSCRIBE": 3,
}

func (x Request_Type) String() string {
	return proto.EnumName(Request_Type_name, int32(x))
}

func (Request_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{7, 0}
}

// Node represents a unique endpoint (host + port) on the network.
//
// A single host can have multiple nodes running; seemingly within
// the same process. e.g. client and server of a p2p network.
type Node struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ipv4                 string   `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{0}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Node) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *Node) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// Credentials will usually be a combination of username and a
// secret. It's upto the implementation to use plain text passwords
// or hashes as secrets.
type Credentials struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Secret               string   `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Credentials) Reset()         { *m = Credentials{} }
func (m *Credentials) String() string { return proto.CompactTextString(m) }
func (*Credentials) ProtoMessage()    {}
func (*Credentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{1}
}

func (m *Credentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credentials.Unmarshal(m, b)
}
func (m *Credentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credentials.Marshal(b, m, deterministic)
}
func (m *Credentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credentials.Merge(m, src)
}
func (m *Credentials) XXX_Size() int {
	return xxx_messageInfo_Credentials.Size(m)
}
func (m *Credentials) XXX_DiscardUnknown() {
	xxx_messageInfo_Credentials.DiscardUnknown(m)
}

var xxx_messageInfo_Credentials proto.InternalMessageInfo

func (m *Credentials) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Credentials) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

// Timeout defines the time in millis for a session. It can be sent
// as an argument to request a token after successfull authentication,
// or alongwith a Token to indicate the type of session and timeout
// associated with the Token.
type Timeout struct {
	SessionType          SessionType `protobuf:"varint,1,opt,name=session_type,json=sessionType,proto3,enum=proto.SessionType" json:"session_type,omitempty"`
	TimeInMillis         uint64      `protobuf:"varint,2,opt,name=time_in_millis,json=timeInMillis,proto3" json:"time_in_millis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Timeout) Reset()         { *m = Timeout{} }
func (m *Timeout) String() string { return proto.CompactTextString(m) }
func (*Timeout) ProtoMessage()    {}
func (*Timeout) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{2}
}

func (m *Timeout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timeout.Unmarshal(m, b)
}
func (m *Timeout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timeout.Marshal(b, m, deterministic)
}
func (m *Timeout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timeout.Merge(m, src)
}
func (m *Timeout) XXX_Size() int {
	return xxx_messageInfo_Timeout.Size(m)
}
func (m *Timeout) XXX_DiscardUnknown() {
	xxx_messageInfo_Timeout.DiscardUnknown(m)
}

var xxx_messageInfo_Timeout proto.InternalMessageInfo

func (m *Timeout) GetSessionType() SessionType {
	if m != nil {
		return m.SessionType
	}
	return SessionType_SINGLE_CALL
}

func (m *Timeout) GetTimeInMillis() uint64 {
	if m != nil {
		return m.TimeInMillis
	}
	return 0
}

// Login message with be sent by one node to another, or by a client to
// a server. Upon login, if successfully authenticated, the client/ node
// will receive a token which it will then have to share with the server/
// other-node every time it sends/ receives messages.
type Login struct {
	InitiatingNode       *Node        `protobuf:"bytes,1,opt,name=initiating_node,json=initiatingNode,proto3" json:"initiating_node,omitempty"`
	Credentials          *Credentials `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
	Timeout              *Timeout     `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Login) Reset()         { *m = Login{} }
func (m *Login) String() string { return proto.CompactTextString(m) }
func (*Login) ProtoMessage()    {}
func (*Login) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{3}
}

func (m *Login) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Login.Unmarshal(m, b)
}
func (m *Login) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Login.Marshal(b, m, deterministic)
}
func (m *Login) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Login.Merge(m, src)
}
func (m *Login) XXX_Size() int {
	return xxx_messageInfo_Login.Size(m)
}
func (m *Login) XXX_DiscardUnknown() {
	xxx_messageInfo_Login.DiscardUnknown(m)
}

var xxx_messageInfo_Login proto.InternalMessageInfo

func (m *Login) GetInitiatingNode() *Node {
	if m != nil {
		return m.InitiatingNode
	}
	return nil
}

func (m *Login) GetCredentials() *Credentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *Login) GetTimeout() *Timeout {
	if m != nil {
		return m.Timeout
	}
	return nil
}

// A Token is created everytime a Node is successfully authenticated. It contains
// a token value.
//
// The type of session affiliated with a Token is available as a Timeout type
// member in a token.
type Token struct {
	TokenVal             string   `protobuf:"bytes,1,opt,name=token_val,json=tokenVal,proto3" json:"token_val,omitempty"`
	SessionTimeout       *Timeout `protobuf:"bytes,2,opt,name=session_timeout,json=sessionTimeout,proto3" json:"session_timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{4}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetTokenVal() string {
	if m != nil {
		return m.TokenVal
	}
	return ""
}

func (m *Token) GetSessionTimeout() *Timeout {
	if m != nil {
		return m.SessionTimeout
	}
	return nil
}

// Every response should be accompanied by a status. Status has a message and a
// type to indicate the type of status in the response/ acknowledgement.
type Status struct {
	Message              string      `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Type                 Status_Type `protobuf:"varint,2,opt,name=type,proto3,enum=proto.Status_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{5}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Status) GetType() Status_Type {
	if m != nil {
		return m.Type
	}
	return Status_NO_ERROR
}

// Read messages are sent to read data. Login information is sent with the underlying
// read request to authenticate/ authorize the user, to read the data.
type Read struct {
	Login                *Login   `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	ReqData              []byte   `protobuf:"bytes,2,opt,name=req_data,json=reqData,proto3" json:"req_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Read) Reset()         { *m = Read{} }
func (m *Read) String() string { return proto.CompactTextString(m) }
func (*Read) ProtoMessage()    {}
func (*Read) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{6}
}

func (m *Read) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Read.Unmarshal(m, b)
}
func (m *Read) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Read.Marshal(b, m, deterministic)
}
func (m *Read) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Read.Merge(m, src)
}
func (m *Read) XXX_Size() int {
	return xxx_messageInfo_Read.Size(m)
}
func (m *Read) XXX_DiscardUnknown() {
	xxx_messageInfo_Read.DiscardUnknown(m)
}

var xxx_messageInfo_Read proto.InternalMessageInfo

func (m *Read) GetLogin() *Login {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *Read) GetReqData() []byte {
	if m != nil {
		return m.ReqData
	}
	return nil
}

type Request struct {
	Payload              *any.Any     `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Type                 Request_Type `protobuf:"varint,2,opt,name=type,proto3,enum=proto.Request_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{7}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetPayload() *any.Any {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Request) GetType() Request_Type {
	if m != nil {
		return m.Type
	}
	return Request_SYNC
}

type Response struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data                 *any.Any `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{8}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Response) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("proto.SessionType", SessionType_name, SessionType_value)
	proto.RegisterEnum("proto.Status_Type", Status_Type_name, Status_Type_value)
	proto.RegisterEnum("proto.Request_Type", Request_Type_name, Request_Type_value)
	proto.RegisterType((*Node)(nil), "proto.Node")
	proto.RegisterType((*Credentials)(nil), "proto.Credentials")
	proto.RegisterType((*Timeout)(nil), "proto.Timeout")
	proto.RegisterType((*Login)(nil), "proto.Login")
	proto.RegisterType((*Token)(nil), "proto.Token")
	proto.RegisterType((*Status)(nil), "proto.Status")
	proto.RegisterType((*Read)(nil), "proto.Read")
	proto.RegisterType((*Request)(nil), "proto.Request")
	proto.RegisterType((*Response)(nil), "proto.Response")
}

func init() { proto.RegisterFile("msg.proto", fileDescriptor_c06e4cca6c2cc899) }

var fileDescriptor_c06e4cca6c2cc899 = []byte{
	// 657 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0xdb, 0x6b, 0xdb, 0x3e,
	0x14, 0xc7, 0xeb, 0xd4, 0xb9, 0x1d, 0x27, 0xa9, 0xab, 0xdf, 0x6f, 0x23, 0xed, 0x60, 0x14, 0xb3,
	0x4b, 0xd8, 0x83, 0x03, 0x5d, 0x47, 0xdf, 0x06, 0xb9, 0x6d, 0x35, 0xa4, 0x4e, 0x91, 0x93, 0xc1,
	0x56, 0x86, 0x51, 0x63, 0x35, 0x13, 0x75, 0x24, 0x37, 0x52, 0x0a, 0xf9, 0x5b, 0xc6, 0x9e, 0xf7,
	0x6f, 0x8e, 0xc8, 0x4a, 0x9a, 0xc2, 0xf6, 0x64, 0x9d, 0x8b, 0xbe, 0xe7, 0x9c, 0xcf, 0x41, 0x86,
	0xea, 0x5c, 0xce, 0xfc, 0x6c, 0x21, 0x94, 0x40, 0x45, 0xfd, 0x39, 0x3e, 0x9a, 0x09, 0x31, 0x4b,
	0x69, 0x5b, 0x5b, 0x37, 0xcb, 0xdb, 0x36, 0xe1, 0xab, 0x3c, 0xc3, 0xfb, 0x08, 0x76, 0x28, 0x12,
	0x8a, 0x1a, 0x50, 0x60, 0x49, 0xd3, 0x3a, 0xb1, 0x5a, 0x55, 0x5c, 0x60, 0x09, 0x42, 0x60, 0xb3,
	0xec, 0xe1, 0xac, 0x59, 0xd0, 0x1e, 0x7d, 0x5e, 0xfb, 0x32, 0xb1, 0x50, 0xcd, 0xfd, 0x13, 0xab,
	0x55, 0xc7, 0xfa, 0xec, 0x75, 0xc0, 0xe9, 0x2d, 0x68, 0x42, 0xb9, 0x62, 0x24, 0x95, 0xe8, 0x18,
	0x2a, 0x4b, 0x49, 0x17, 0x9c, 0xcc, 0xa9, 0x11, 0xdb, 0xda, 0xe8, 0x39, 0x94, 0x24, 0x9d, 0x2e,
	0xa8, 0x32, 0xa2, 0xc6, 0xf2, 0x6e, 0xa1, 0x3c, 0x66, 0x73, 0x2a, 0x96, 0x0a, 0x7d, 0x80, 0x9a,
	0xa4, 0x52, 0x32, 0xc1, 0x63, 0xb5, 0xca, 0x72, 0x89, 0xc6, 0x29, 0xca, 0x7b, 0xf5, 0xa3, 0x3c,
	0x34, 0x5e, 0x65, 0x14, 0x3b, 0xf2, 0xd1, 0x40, 0xaf, 0xa0, 0xa1, 0xd8, 0x9c, 0xc6, 0x8c, 0xc7,
	0x73, 0x96, 0xa6, 0x4c, 0xea, 0x0a, 0x36, 0xae, 0xad, 0xbd, 0x01, 0xbf, 0xd4, 0x3e, 0xef, 0x97,
	0x05, 0xc5, 0xa1, 0x98, 0x31, 0x8e, 0xce, 0xe0, 0x80, 0x71, 0xa6, 0x18, 0x51, 0x8c, 0xcf, 0x62,
	0x2e, 0x92, 0xbc, 0x92, 0x73, 0xea, 0x98, 0x4a, 0x6b, 0x24, 0xb8, 0xf1, 0x98, 0xa3, 0x11, 0x9d,
	0x81, 0x33, 0x7d, 0x1c, 0x55, 0x97, 0x70, 0xb6, 0xbd, 0xed, 0x40, 0xc0, 0xbb, 0x69, 0xa8, 0x05,
	0x65, 0x95, 0x4f, 0xa7, 0xb9, 0x39, 0xa7, 0x0d, 0x73, 0xc3, 0xcc, 0x8c, 0x37, 0x61, 0xef, 0x3b,
	0x14, 0xc7, 0xe2, 0x8e, 0x72, 0xf4, 0x02, 0xaa, 0x6a, 0x7d, 0x88, 0x1f, 0x48, 0xba, 0xa1, 0xa8,
	0x1d, 0x5f, 0x48, 0x8a, 0xce, 0xe1, 0x60, 0x8b, 0xc8, 0xe8, 0x16, 0xfe, 0xaa, 0xdb, 0xd8, 0x10,
	0x32, 0xf2, 0xbf, 0x2d, 0x28, 0x45, 0x8a, 0xa8, 0xa5, 0x44, 0x4d, 0x28, 0xcf, 0xa9, 0x94, 0x64,
	0xb6, 0x59, 0xd2, 0xc6, 0x44, 0x6f, 0xc0, 0xd6, 0xe0, 0x0b, 0x4f, 0xc1, 0xeb, 0x6b, 0xbe, 0x06,
	0xaf, 0xe3, 0xde, 0x35, 0xd8, 0x9a, 0x7c, 0x0d, 0x2a, 0xe1, 0x28, 0x1e, 0x60, 0x3c, 0xc2, 0xee,
	0x1e, 0x3a, 0x84, 0x7a, 0x38, 0x8a, 0xfb, 0x9d, 0x71, 0x27, 0xfe, 0x34, 0x9a, 0x84, 0x7d, 0xd7,
	0x42, 0xcf, 0xe0, 0xf0, 0x6a, 0x80, 0x2f, 0x83, 0x28, 0x0a, 0x46, 0x61, 0xdc, 0x1f, 0x84, 0xc1,
	0xa0, 0xef, 0x16, 0x90, 0x0b, 0xb5, 0x70, 0x14, 0x47, 0x93, 0xde, 0x85, 0x4e, 0x77, 0xf7, 0x51,
	0x15, 0x8a, 0xb9, 0x8c, 0xed, 0x0d, 0xc0, 0xc6, 0x94, 0x24, 0xc8, 0x83, 0x62, 0xba, 0xde, 0x97,
	0x59, 0x4e, 0xcd, 0x74, 0xa3, 0x77, 0x88, 0xf3, 0x10, 0x3a, 0x82, 0xca, 0x82, 0xde, 0xc7, 0x09,
	0x51, 0x44, 0x37, 0x5d, 0xc3, 0xe5, 0x05, 0xbd, 0xef, 0x13, 0x45, 0xbc, 0x9f, 0x16, 0x94, 0x31,
	0xbd, 0x5f, 0x52, 0xa9, 0x90, 0x0f, 0xe5, 0x8c, 0xac, 0x52, 0x41, 0x12, 0x23, 0xf6, 0xbf, 0x9f,
	0xbf, 0x09, 0x7f, 0xf3, 0x26, 0xfc, 0x0e, 0x5f, 0xe1, 0x4d, 0x12, 0x7a, 0xfb, 0x84, 0xc3, 0x7f,
	0xa6, 0xb2, 0x51, 0xdb, 0x05, 0x71, 0x6e, 0x40, 0x54, 0xc0, 0x8e, 0xbe, 0x86, 0x3d, 0x77, 0x6f,
	0x3d, 0x48, 0x47, 0x1f, 0x2d, 0xe4, 0x40, 0xf9, 0x6a, 0xd2, 0x1d, 0x06, 0xd1, 0x85, 0x5b, 0x40,
	0x75, 0xa8, 0x46, 0x93, 0x6e, 0xd4, 0xc3, 0x41, 0x77, 0xe0, 0xee, 0x7b, 0xd7, 0x50, 0xc1, 0x54,
	0x66, 0x82, 0x4b, 0x8a, 0x5e, 0x43, 0x49, 0x6a, 0xc4, 0xa6, 0xb9, 0xfa, 0x13, 0xee, 0xd8, 0x04,
	0x51, 0x0b, 0xec, 0xed, 0x9c, 0xff, 0x9a, 0x40, 0x67, 0xbc, 0xf3, 0xc1, 0xd9, 0x79, 0x2c, 0xe8,
	0x00, 0x9c, 0x28, 0x08, 0x3f, 0x0f, 0x07, 0x71, 0xaf, 0x33, 0x1c, 0xba, 0x7b, 0xa8, 0x01, 0x70,
	0x39, 0x19, 0x8e, 0x83, 0xdc, 0xb6, 0xba, 0x27, 0xdf, 0x5e, 0xce, 0x98, 0xfa, 0xb1, 0xbc, 0xf1,
	0xa7, 0x62, 0xde, 0x16, 0x19, 0xe5, 0x32, 0x13, 0xd3, 0xbb, 0x36, 0xa7, 0xca, 0xfc, 0x34, 0x4a,
	0xfa, 0xf3, 0xfe, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0xfc, 0xa1, 0xd3, 0x5d, 0x04, 0x00,
	0x00,
}
